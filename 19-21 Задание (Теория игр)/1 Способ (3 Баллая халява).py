# Этот способ подойдет, если у вас в 19 задании идет выигрышная стратегия
# За одного из игроков. Если неудачный ход - по-другому

def f(s, m):
    if s <= (>=) значение выигрыша:
        return m % 2 == 0
    if m == 0:
        return 0
    h = [f(s, m - 1), f(s, m - 1), f(s, m - 1)] # К s подставляем свои ходы

    return any(h) if m % 2 != 0 else all(h) # ШАБЛОН! Кроме неудачного хода
#   return any(h) if m % 2 != 0 else any(h) # ДЛЯ 19 ЗАДАЧИ С НЕУДАЧНЫМ ХОДОМ

# Почему all и any? any - у Пети есть хотя бы 1 ход, который приведет его к победе + НЕЧЕТНЫЕ ХОДЫ
#                   all - для Вани, чтобы всеми ходами Петя не мог выиграть

print('19)', [s for s in range(начальное камней, конечное)] if f(s, 2))
print('20)', [s for s in range(начальное камней, конечное)] if not f(s, 1) and f(s, 3))
print('21)', [s for s in range(начальное камней, конечное)] if not f(s, 2) and f(s, 4))

# Если у вас есть неудачный ход, то поменяется код совсем немного

